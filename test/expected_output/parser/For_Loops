1 : ['definitionList']
2 : ['definition_terminal']
3 : ['function definition']
4 : ['func_type', Token('SELF_DEFINED', 'main'), Token('OPEN_PAREN', '('), Token('CLOSE_PAREN', ')'), 'block']
5 : [Token('TYPE', 'int')]
5 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
6 : ['content_terminal', 'content']
7 : ['single_line']
8 : ['initialization', Token('SEMICOLON', ';')]
9 : ['var_type', Token('SELF_DEFINED', 'i'), Token('SET', '='), 'initialization_terminal']
10 : [Token('TYPE', 'int')]
10 : ['arithmetic']
11 : ['value']
12 : [Token('INTEGER', '0')]
7 : ['content_terminal', 'content']
8 : ['for loop']
9 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
10 : ['designation']
11 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
12 : [Token('SET', '=')]
12 : ['value']
13 : [Token('INTEGER', '0')]
10 : ['collation']
11 : ['collation', 'comparison', 'collation']
12 : ['arithmetic']
13 : [Token('SELF_DEFINED', 'i')]
12 : [Token('LT', '<')]
12 : ['arithmetic']
13 : ['value']
14 : [Token('INTEGER', '10')]
10 : ['unary']
11 : [Token('SELF_DEFINED', 'i'), Token('INC', '++')]
10 : ['single_line']
11 : ['break', Token('SEMICOLON', ';')]
12 : [Token('BREAK', 'break')]
8 : ['content_terminal', 'content']
9 : ['for loop']
10 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
11 : ['designation']
12 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
13 : [Token('SET', '=')]
13 : ['value']
14 : [Token('INTEGER', '0')]
11 : ['collation']
12 : ['collation', 'comparison', 'collation']
13 : ['arithmetic']
14 : [Token('SELF_DEFINED', 'i')]
13 : [Token('LT', '<')]
13 : ['arithmetic']
14 : ['value']
15 : [Token('INTEGER', '10')]
11 : ['unary']
12 : [Token('SELF_DEFINED', 'i'), Token('INC', '++')]
11 : ['block']
12 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
13 : ['content_terminal']
14 : ['for loop']
15 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
16 : ['designation']
17 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
18 : [Token('SET', '=')]
18 : ['value']
19 : [Token('INTEGER', '0')]
16 : ['collation']
17 : ['collation', 'comparison', 'collation']
18 : ['arithmetic']
19 : [Token('SELF_DEFINED', 'i')]
18 : [Token('LT', '<')]
18 : ['arithmetic']
19 : ['value']
20 : [Token('INTEGER', '10')]
16 : ['unary']
17 : [Token('SELF_DEFINED', 'i'), Token('INC', '++')]
16 : ['block']
17 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
18 : ['content_terminal']
19 : ['single_line']
20 : ['continue', Token('SEMICOLON', ';')]
21 : [Token('CONTINUE', 'continue')]
9 : ['content_terminal', 'content']
10 : ['for loop']
11 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
12 : ['designation']
13 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
14 : [Token('SET', '=')]
14 : ['value']
15 : [Token('INTEGER', '0')]
12 : ['collation']
13 : ['collation', 'comparison', 'collation']
14 : ['arithmetic']
15 : [Token('SELF_DEFINED', 'i')]
14 : [Token('LT', '<')]
14 : ['arithmetic']
15 : ['value']
16 : [Token('INTEGER', '10')]
12 : ['unary']
13 : [Token('SELF_DEFINED', 'i'), Token('INC', '++')]
12 : ['single_line']
13 : ['continue', Token('SEMICOLON', ';')]
14 : [Token('CONTINUE', 'continue')]
10 : ['content_terminal', 'content']
11 : ['for loop']
12 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
13 : ['designation']
14 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
15 : [Token('SET', '=')]
15 : ['value']
16 : [Token('INTEGER', '0')]
13 : ['collation']
14 : ['collation', 'comparison', 'collation']
15 : ['arithmetic']
16 : [Token('SELF_DEFINED', 'i')]
15 : [Token('LT', '<')]
15 : ['arithmetic']
16 : ['value']
17 : [Token('INTEGER', '10')]
13 : ['unary']
14 : [Token('SELF_DEFINED', 'i'), Token('INC', '++')]
13 : ['for loop']
14 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
15 : ['designation']
16 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
17 : [Token('SET', '=')]
17 : ['value']
18 : [Token('INTEGER', '0')]
15 : ['collation']
16 : ['collation', 'comparison', 'collation']
17 : ['arithmetic']
18 : [Token('SELF_DEFINED', 'i')]
17 : [Token('LT', '<')]
17 : ['arithmetic']
18 : ['value']
19 : [Token('INTEGER', '10')]
15 : ['unary']
16 : [Token('SELF_DEFINED', 'i'), Token('INC', '++')]
15 : ['block']
16 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
17 : ['content_terminal']
18 : ['single_line']
19 : ['continue', Token('SEMICOLON', ';')]
20 : [Token('CONTINUE', 'continue')]
11 : ['content_terminal', 'content']
12 : ['for loop']
13 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
14 : ['initialization']
15 : ['var_type', Token('SELF_DEFINED', 'j'), Token('SET', '='), 'initialization_terminal']
16 : [Token('TYPE', 'int')]
16 : ['arithmetic']
17 : ['value']
18 : [Token('INTEGER', '0')]
14 : ['collation']
15 : ['collation', 'comparison', 'collation']
16 : ['arithmetic']
17 : [Token('SELF_DEFINED', 'j')]
16 : [Token('EQ', '==')]
16 : ['arithmetic']
17 : ['value']
18 : [Token('INTEGER', '0')]
14 : ['designation']
15 : [Token('SELF_DEFINED', 'j'), 'assignment', 'arithmetic']
16 : [Token('SET', '=')]
16 : [Token('SELF_DEFINED', 'j')]
14 : ['block']
15 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
16 : ['content_terminal']
17 : ['single_line']
18 : ['continue', Token('SEMICOLON', ';')]
19 : [Token('CONTINUE', 'continue')]
12 : ['content_terminal', 'content']
13 : ['for loop']
14 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
15 : []
15 : []
15 : []
15 : ['single_line']
16 : ['continue', Token('SEMICOLON', ';')]
17 : [Token('CONTINUE', 'continue')]
13 : ['content_terminal', 'content']
14 : ['for loop']
15 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
16 : ['designation']
17 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
18 : [Token('SET', '=')]
18 : ['value']
19 : [Token('INTEGER', '0')]
16 : []
16 : []
16 : ['single_line']
17 : ['continue', Token('SEMICOLON', ';')]
18 : [Token('CONTINUE', 'continue')]
14 : ['content_terminal', 'content']
15 : ['for loop']
16 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
17 : []
17 : ['collation']
18 : ['arithmetic']
19 : ['value']
20 : [Token('INTEGER', '1')]
17 : []
17 : ['single_line']
18 : ['continue', Token('SEMICOLON', ';')]
19 : [Token('CONTINUE', 'continue')]
15 : ['content_terminal', 'content']
16 : ['for loop']
17 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
18 : []
18 : []
18 : ['designation']
19 : [Token('SELF_DEFINED', 'i'), 'assignment', 'arithmetic']
20 : [Token('SET', '=')]
20 : [Token('SELF_DEFINED', 'i')]
18 : ['single_line']
19 : ['continue', Token('SEMICOLON', ';')]
20 : [Token('CONTINUE', 'continue')]
16 : ['content_terminal']
17 : ['for loop']
18 : [Token('FOR_LOOP', 'for'), Token('OPEN_PAREN', '('), 'for param 1', Token('SEMICOLON', ';'), 'for param 2', Token('SEMICOLON', ';'), 'for param 3', Token('CLOSE_PAREN', ')'), 'content_terminal']
19 : []
19 : []
19 : []
19 : ['block']
20 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
