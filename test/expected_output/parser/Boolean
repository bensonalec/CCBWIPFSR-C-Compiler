1 : ['definitionList']
2 : ['definition_terminal']
3 : ['function definition']
4 : ['func_type', Token('SELF_DEFINED', 'main'), Token('OPEN_PAREN', '('), Token('CLOSE_PAREN', ')'), 'block']
5 : [Token('TYPE', 'int')]
5 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
6 : ['content_terminal', 'content']
7 : ['single_line']
8 : ['initialization', Token('SEMICOLON', ';')]
9 : ['var_type', Token('SELF_DEFINED', 'one'), Token('SET', '='), 'initialization_terminal']
10 : [Token('TYPE', 'int')]
10 : ['arithmetic']
11 : ['value']
12 : [Token('INTEGER', '1')]
7 : ['content_terminal', 'content']
8 : ['if']
9 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
10 : ['arithmetic']
11 : [Token('SELF_DEFINED', 'one')]
10 : ['content_terminal']
11 : ['block']
12 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
8 : ['content_terminal', 'content']
9 : ['if']
10 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
11 : ['collation', 'comparison', 'collation']
12 : ['arithmetic']
13 : [Token('SELF_DEFINED', 'one')]
12 : [Token('GT', '>')]
12 : ['arithmetic']
13 : [Token('SELF_DEFINED', 'one')]
11 : ['content_terminal']
12 : ['block']
13 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
9 : ['content_terminal', 'content']
10 : ['if']
11 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
12 : ['collation', 'comparison', 'collation']
13 : ['arithmetic']
14 : [Token('SELF_DEFINED', 'one')]
13 : [Token('LT', '<')]
13 : ['arithmetic']
14 : [Token('SELF_DEFINED', 'one')]
12 : ['content_terminal']
13 : ['block']
14 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
10 : ['content_terminal', 'content']
11 : ['if']
12 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
13 : ['collation', 'comparison', 'collation']
14 : ['arithmetic']
15 : [Token('SELF_DEFINED', 'one')]
14 : [Token('EQ', '==')]
14 : ['arithmetic']
15 : [Token('SELF_DEFINED', 'one')]
13 : ['content_terminal']
14 : ['block']
15 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
11 : ['content_terminal', 'content']
12 : ['if']
13 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
14 : ['collation', 'comparison', 'collation']
15 : ['arithmetic']
16 : [Token('SELF_DEFINED', 'one')]
15 : [Token('NEQ', '!=')]
15 : ['arithmetic']
16 : [Token('SELF_DEFINED', 'one')]
14 : ['content_terminal']
15 : ['block']
16 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
12 : ['content_terminal', 'content']
13 : ['if']
14 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
15 : ['collation', 'comparison', 'collation']
16 : ['arithmetic']
17 : [Token('SELF_DEFINED', 'one')]
16 : [Token('GEQ', '>=')]
16 : ['arithmetic']
17 : [Token('SELF_DEFINED', 'one')]
15 : ['content_terminal']
16 : ['block']
17 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
13 : ['content_terminal']
14 : ['if']
15 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
16 : ['collation', 'comparison', 'collation']
17 : ['arithmetic']
18 : [Token('SELF_DEFINED', 'one')]
17 : [Token('LEQ', '<=')]
17 : ['arithmetic']
18 : [Token('SELF_DEFINED', 'one')]
16 : ['content_terminal']
17 : ['block']
18 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
