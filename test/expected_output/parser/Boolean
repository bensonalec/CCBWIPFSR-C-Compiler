1 : ['definitionList']
2 : ['function definition', 'definitionList']
3 : [Token('TYPE', 'int'), Token('SELF_DEFINED', 'main'), Token('OPEN_PAREN', '('), Token('CLOSE_PAREN', ')'), 'block']
4 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
5 : ['content_terminal', 'content']
6 : ['single_line']
7 : ['initialization', Token('SEMICOLON', ';')]
8 : [Token('TYPE', 'int'), 'designation']
9 : [Token('SELF_DEFINED', 'one'), 'assignment', 'arithmetic']
10 : [Token('SET', '=')]
10 : ['value']
11 : [Token('INTEGER', '1')]
6 : ['content_terminal', 'content']
7 : ['if']
8 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
9 : ['arithmetic']
10 : [Token('SELF_DEFINED', 'one')]
9 : ['content_terminal']
10 : ['block']
11 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
7 : ['content_terminal', 'content']
8 : ['if']
9 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
10 : ['collation', 'comparison', 'collation']
11 : ['arithmetic']
12 : [Token('SELF_DEFINED', 'one')]
11 : [Token('GT', '>')]
11 : ['arithmetic']
12 : [Token('SELF_DEFINED', 'one')]
10 : ['content_terminal']
11 : ['block']
12 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
8 : ['content_terminal', 'content']
9 : ['if']
10 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
11 : ['collation', 'comparison', 'collation']
12 : ['arithmetic']
13 : [Token('SELF_DEFINED', 'one')]
12 : [Token('LT', '<')]
12 : ['arithmetic']
13 : [Token('SELF_DEFINED', 'one')]
11 : ['content_terminal']
12 : ['block']
13 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
9 : ['content_terminal', 'content']
10 : ['if']
11 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
12 : ['collation', 'comparison', 'collation']
13 : ['arithmetic']
14 : [Token('SELF_DEFINED', 'one')]
13 : [Token('EQ', '==')]
13 : ['arithmetic']
14 : [Token('SELF_DEFINED', 'one')]
12 : ['content_terminal']
13 : ['block']
14 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
10 : ['content_terminal', 'content']
11 : ['if']
12 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
13 : ['collation', 'comparison', 'collation']
14 : ['arithmetic']
15 : [Token('SELF_DEFINED', 'one')]
14 : [Token('NEQ', '!=')]
14 : ['arithmetic']
15 : [Token('SELF_DEFINED', 'one')]
13 : ['content_terminal']
14 : ['block']
15 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
11 : ['content_terminal', 'content']
12 : ['if']
13 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
14 : ['collation', 'comparison', 'collation']
15 : ['arithmetic']
16 : [Token('SELF_DEFINED', 'one')]
15 : [Token('GEQ', '>=')]
15 : ['arithmetic']
16 : [Token('SELF_DEFINED', 'one')]
14 : ['content_terminal']
15 : ['block']
16 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
12 : ['content_terminal']
13 : ['if']
14 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
15 : ['collation', 'comparison', 'collation']
16 : ['arithmetic']
17 : [Token('SELF_DEFINED', 'one')]
16 : [Token('LEQ', '<=')]
16 : ['arithmetic']
17 : [Token('SELF_DEFINED', 'one')]
15 : ['content_terminal']
16 : ['block']
17 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
3 : []
