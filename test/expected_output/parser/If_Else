1 : ['definitionList']
2 : ['definition_terminal']
3 : ['function definition']
4 : ['func_type', Token('SELF_DEFINED', 'main'), Token('OPEN_PAREN', '('), Token('CLOSE_PAREN', ')'), 'block']
5 : [Token('TYPE', 'int')]
5 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
6 : ['content_terminal', 'content']
7 : ['if']
8 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body', 'if_expansion']
9 : ['arithmetic']
10 : ['value']
11 : [Token('INTEGER', '1')]
9 : ['content_terminal']
10 : ['block']
11 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
9 : [Token('ELSE_BRANCH', 'else'), 'if_body']
10 : ['content_terminal']
11 : ['if']
12 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body', 'if_expansion']
13 : ['arithmetic']
14 : ['value']
15 : [Token('INTEGER', '0')]
13 : ['content_terminal']
14 : ['block']
15 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
13 : [Token('ELSE_BRANCH', 'else'), 'if_body']
14 : ['content_terminal']
15 : ['block']
16 : [Token('OPEN_BRACE', '{'), 'content', Token('CLOSE_BRACE', '}')]
17 : ['content_terminal']
18 : ['if']
19 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body']
20 : ['arithmetic']
21 : ['value']
22 : [Token('INTEGER', '1')]
20 : ['content_terminal']
21 : ['block']
22 : [Token('OPEN_BRACE', '{'), Token('CLOSE_BRACE', '}')]
7 : ['content_terminal']
8 : ['if']
9 : [Token('IF_BRANCH', 'if'), Token('OPEN_PAREN', '('), 'collation', Token('CLOSE_PAREN', ')'), 'if_body', 'if_expansion']
10 : ['arithmetic']
11 : ['value']
12 : [Token('INTEGER', '1')]
10 : ['content_terminal']
11 : ['single_line']
12 : ['initialization', Token('SEMICOLON', ';')]
13 : ['var_type', Token('SELF_DEFINED', 'a'), Token('SET', '='), 'initialization_terminal']
14 : [Token('TYPE', 'int')]
14 : ['arithmetic']
15 : ['value']
16 : [Token('INTEGER', '0')]
10 : [Token('ELSE_BRANCH', 'else'), 'if_body']
11 : ['content_terminal']
12 : ['single_line']
13 : ['initialization', Token('SEMICOLON', ';')]
14 : ['var_type', Token('SELF_DEFINED', 'c'), Token('SET', '='), 'initialization_terminal']
15 : [Token('TYPE', 'int')]
15 : ['arithmetic']
16 : ['value']
17 : [Token('INTEGER', '2')]
