Token('TYPE', 'int')
Token('SELF_DEFINED', 'main')
Token('OPEN_PAREN', '(')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('IF_BRANCH', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('GT', '>')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('IF_BRANCH', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('LT', '<')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('IF_BRANCH', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('GEQ', '>=')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('IF_BRANCH', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('LEQ', '<=')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('IF_BRANCH', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('EQ', '==')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('IF_BRANCH', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('BAND', '&')
Token('INTEGER', '10')
Token('AND', '&&')
Token('INTEGER', '100')
Token('BOR', '|')
Token('INTEGER', '10')
Token('OR', '||')
Token('INTEGER', '100')
Token('XOR', '^')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('CLOSE_BRACE', '}')
