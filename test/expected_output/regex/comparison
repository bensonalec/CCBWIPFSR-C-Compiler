Token('TYPE', 'int')
Token('SELF_DEFINED', 'main')
Token('OPEN_PAREN', '(')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('BRANCHING', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('COMPARISON', '>')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('BRANCHING', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('COMPARISON', '<')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('BRANCHING', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('COMPARISON', '>=')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('BRANCHING', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('COMPARISON', '<=')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('BRANCHING', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('COMPARISON', '==')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('BRANCHING', 'if')
Token('OPEN_PAREN', '(')
Token('INTEGER', '100')
Token('ARITHMETIC', '&')
Token('INTEGER', '10')
Token('LOGICAL', '&&')
Token('INTEGER', '100')
Token('ARITHMETIC', '|')
Token('INTEGER', '10')
Token('LOGICAL', '||')
Token('INTEGER', '100')
Token('ARITHMETIC', '^')
Token('INTEGER', '10')
Token('CLOSE_PAREN', ')')
Token('OPEN_BRACE', '{')
Token('CLOSE_BRACE', '}')
Token('CLOSE_BRACE', '}')
