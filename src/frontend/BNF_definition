program : definitionList #program

definitionList : definition_terminal definitionList #definitionList
definitionList : definition_terminal #definitionList

definition_terminal : functionDefinition #definition_terminal
definition_terminal : functionDeclaration #definition_terminal
definition_terminal : initialization #definition_terminal
definition_terminal : COMMENT #definition_terminal

functionDefinition : func_type SELF_DEFINED OPEN_PAREN args CLOSE_PAREN block #function definition
functionDefinition : func_type SELF_DEFINED OPEN_PAREN CLOSE_PAREN block #function definition

functionDeclaration : func_type SELF_DEFINED OPEN_PAREN args CLOSE_PAREN SEMICOLON #functionDeclaration
functionDeclaration : func_type SELF_DEFINED OPEN_PAREN CLOSE_PAREN SEMICOLON #functionDeclaration

func_type : TYPE #func_type
func_type : func_modif TYPE #func_type

func_modif : func_modif_terminal #func_modif
func_modif : func_modif_terminal func_modif #func_modif

func_modif_terminal : FUNC_MODIF #
func_modif_terminal : BOTH_MODIF #

var_modif : var_modif_terminal #var_modif
var_modif : var_modif_terminal var_modif #var_modif

var_modif_terminal : VAR_MODIF #var_modif_terminal
var_modif_terminal : BOTH_MODIF #var_modif_terminal

args : arg_terminal COMMA args #args
args : arg_terminal #args

arg_terminal : var_type SELF_DEFINED #arg_terminal
arg_terminal : var_type #arg_terminal

block : OPEN_BRACE block block CLOSE_BRACE #block
block : OPEN_BRACE block content CLOSE_BRACE #block
block : OPEN_BRACE content block CLOSE_BRACE #block
block : OPEN_BRACE content CLOSE_BRACE #block
block : OPEN_BRACE CLOSE_BRACE #block

content : content_terminal content #content
content : content_terminal #content

content_terminal : single_line #content_terminal
content_terminal : loop #content_terminal
content_terminal : branch #content_terminal
content_terminal : goto #content_terminal
content_terminal : COMMENT #content_terminal

single_line : initialization SEMICOLON #single_line
single_line : function_call SEMICOLON #single_line
single_line : designation SEMICOLON #single_line
single_line : response SEMICOLON #single_line
single_line : arithmetic SEMICOLON #single_line
single_line : SEMICOLON #single_line

function_call : SELF_DEFINED OPEN_PAREN param CLOSE_PAREN #function call
function_call : SELF_DEFINED OPEN_PAREN CLOSE_PAREN #function call

param : param_terminal #paramater
param : param_terminal COMMA param #parameter

param_terminal : arithmetic #param_terminal
param_terminal : STRING #param_terminal

loop : WHILE_LOOP OPEN_PAREN collation CLOSE_PAREN block #while loop
loop : WHILE_LOOP OPEN_PAREN collation CLOSE_PAREN content_terminal #while loop

loop : FOR_LOOP OPEN_PAREN for_part_1 SEMICOLON for_part_2 SEMICOLON for_part_3 CLOSE_PAREN block #for loop
loop : FOR_LOOP OPEN_PAREN for_part_1 SEMICOLON for_part_2 SEMICOLON for_part_3 CLOSE_PAREN content_terminal #for loop

loop : DO_LOOP block WHILE_LOOP OPEN_PAREN collation CLOSE_PAREN SEMICOLON #do loop
loop : DO_LOOP content_terminal WHILE_LOOP OPEN_PAREN collation CLOSE_PAREN SEMICOLON #do loop

branch : IF_BRANCH OPEN_PAREN collation CLOSE_PAREN if_body#if
branch : IF_BRANCH OPEN_PAREN collation CLOSE_PAREN if_body if_expansion #if

if_body : block #if_body
if_body : content_terminal #if_body

if_expansion : ELSE_BRANCH if_body #if_expansion

branch : SWITCH_BRANCH OPEN_PAREN arithmetic CLOSE_PAREN switch_body #switch

switch_body : OPEN_BRACE case CLOSE_BRACE #switch_body
switch_body : OPEN_BRACE cases CLOSE_BRACE #switch_body

cases : case cases #cases
cases : case #cases
cases : default #cases

case : CASE value COLON #case
case : CASE value COLON case_body #case

default : DEFAULT COLON case_body #default

case_body : block #case_body
case_body : content #case_body

goto : SELF_DEFINED COLON block #goto
goto : SELF_DEFINED COLON content_terminal #goto
goto : SELF_DEFINED COLON #goto

response : RETURN arithmetic #return
response : RETURN function_call #return
response : RETURN SELF_DEFINED #return
response : RETURN #return

response : GOTO SELF_DEFINED #jump

response : BREAK #break
response : CONTINUE #continue

initialization : var_type designation #initialization
initialization : var_type SELF_DEFINED #initialization
initialization : var_type SELF_DEFINED OPEN_BRACK INTEGER CLOSE_BRACK #initialization
initialization : var_type MUL designation #initialization

var_type : var_modif TYPE #var_type
var_type : TYPE #var_type

for_part_1 : initialization #for param 1
for_part_1 : #for param 1
for_part_1 : designation #for param 1

for_part_2 : collation #for param 2
for_part_2 : #for param 2

for_part_3 : designation #for param 3
for_part_3 : #for param 3

designation : SELF_DEFINED assignment arithmetic #designation
designation : SELF_DEFINED assignment function_call #designation
designation : SELF_DEFINED OPEN_BRACK INTEGER CLOSE_BRACK assignment arithmetic #designation
designation : SELF_DEFINED OPEN_BRACK INTEGER CLOSE_BRACK assignment STRING #designation
designation : SELF_DEFINED OPEN_BRACK INTEGER CLOSE_BRACK assignment OPEN_BRACE arr_list CLOSE_BRACE #designation

arr_list : value #arr_list
arr_list : value COMMA arr_list #arr_list

assignment : AEQ #assignment
assignment : SEQ #assignment
assignment : MEQ #assignment
assignment : DEQ #assignment
assignment : LSEQ #assignment
assignment : RSEQ #assignment
assignment : BOEQ #assignment
assignment : BAEQ #assignment
assignment : XEQ #assignment
assignment : CEQ #assignment
assignment : SET #assignment

collation : collation comparison collation #collation
collation : arithmetic #collation
collation : OPEN_PAREN initialization CLOSE_PAREN #collation
collation : OPEN_PAREN designation CLOSE_PAREN #collation

comparison : EQ #comparison
comparison : LEQ #comparison
comparison : GEQ #comparison
comparison : NEQ #comparison
comparison : LT #comparison
comparison : GT #comparison

arithmetic : arithmetic OR arithmetic #arithmetic
arithmetic : arithmetic AND arithmetic #arithmetic
arithmetic : arithmetic BOR arithmetic #arithmetic
arithmetic : arithmetic XOR arithmetic #arithmetic
arithmetic : arithmetic BAND arithmetic #arithmetic
arithmetic : arithmetic LSH arithmetic #arithmetic
arithmetic : arithmetic RSH arithmetic #arithmetic
arithmetic : arithmetic ADD arithmetic #arithmetic
arithmetic : arithmetic SUB arithmetic #arithmetic
arithmetic : arithmetic MUL arithmetic #arithmetic
arithmetic : arithmetic DIV arithmetic #arithmetic
arithmetic : arithmetic MOD arithmetic #arithmetic
arithmetic : ADD arithmetic #unary
arithmetic : SUB arithmetic #unary
arithmetic : NOT arithmetic #unary
arithmetic : COMP arithmetic #unary
arithmetic : BAND arithmetic #unary
arithmetic : OPEN_PAREN var_modif TYPE CLOSE_PAREN arithmetic #unary
arithmetic : INC SELF_DEFINED #unary
arithmetic : DEC SELF_DEFINED #unary
arithmetic : SELF_DEFINED INC #unary
arithmetic : SELF_DEFINED DEC #unary
arithmetic : OPEN_PAREN arithmetic CLOSE_PAREN #arithmetic
arithmetic : value #arithmetic
arithmetic : SELF_DEFINED #arithmetic
arithmetic : SELF_DEFINED OPEN_BRACK INTEGER CLOSE_BRACK #arithmetic
arithmetic : function_call #arithmetic

value : INTEGER #value
value : PRECISION #value
value : CHAR #value
value : HEX #value
value : OCT #value
value : BIN #value
value : NULL #value